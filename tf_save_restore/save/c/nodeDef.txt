name: "Placeholder"
op: "Placeholder"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: -1
      }
      dim {
        size: 784
      }
    }
  }
}

name: "Placeholder_1"
op: "Placeholder"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: -1
      }
      dim {
        size: 10
      }
    }
  }
}

name: "Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\377\377\377\377\034\000\000\000\034\000\000\000\001\000\000\000"
    }
  }
}

name: "Reshape"
op: "Reshape"
input: "Placeholder"
input: "Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "CONV_1/truncated_normal/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\001\000\000\000 \000\000\000"
    }
  }
}

name: "CONV_1/truncated_normal/mean"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "CONV_1/truncated_normal/stddev"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.10000000149011612
    }
  }
}

name: "CONV_1/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "CONV_1/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "CONV_1/truncated_normal/mul"
op: "Mul"
input: "CONV_1/truncated_normal/TruncatedNormal"
input: "CONV_1/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "CONV_1/truncated_normal"
op: "Add"
input: "CONV_1/truncated_normal/mul"
input: "CONV_1/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "CONV_1/W"
op: "VariableV2"
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 1
      }
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "CONV_1/W/Assign"
op: "Assign"
input: "CONV_1/W"
input: "CONV_1/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@CONV_1/W"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "CONV_1/W/read"
op: "Identity"
input: "CONV_1/W"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@CONV_1/W"
    }
  }
}

name: "CONV_1/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 32
        }
      }
      float_val: 0.10000000149011612
    }
  }
}

name: "CONV_1/b"
op: "VariableV2"
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "CONV_1/b/Assign"
op: "Assign"
input: "CONV_1/b"
input: "CONV_1/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@CONV_1/b"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "CONV_1/b/read"
op: "Identity"
input: "CONV_1/b"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@CONV_1/b"
    }
  }
}

name: "CONV_1/convolution_op"
op: "Conv2D"
input: "Reshape"
input: "CONV_1/W/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "CONV_1/add"
op: "Add"
input: "CONV_1/convolution_op"
input: "CONV_1/b/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "CONV_1/Relu"
op: "Relu"
input: "CONV_1/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "CONV_1/Pool"
op: "MaxPool"
input: "CONV_1/Relu"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "ksize"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}

name: "COV_2/truncated_normal/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
    }
  }
}

name: "COV_2/truncated_normal/mean"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "COV_2/truncated_normal/stddev"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.10000000149011612
    }
  }
}

name: "COV_2/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "COV_2/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "COV_2/truncated_normal/mul"
op: "Mul"
input: "COV_2/truncated_normal/TruncatedNormal"
input: "COV_2/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "COV_2/truncated_normal"
op: "Add"
input: "COV_2/truncated_normal/mul"
input: "COV_2/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "COV_2/W"
op: "VariableV2"
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 32
      }
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "COV_2/W/Assign"
op: "Assign"
input: "COV_2/W"
input: "COV_2/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@COV_2/W"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "COV_2/W/read"
op: "Identity"
input: "COV_2/W"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@COV_2/W"
    }
  }
}

name: "COV_2/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 64
        }
      }
      float_val: 0.10000000149011612
    }
  }
}

name: "COV_2/b"
op: "VariableV2"
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "COV_2/b/Assign"
op: "Assign"
input: "COV_2/b"
input: "COV_2/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@COV_2/b"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "COV_2/b/read"
op: "Identity"
input: "COV_2/b"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@COV_2/b"
    }
  }
}

name: "COV_2/convolution_op"
op: "Conv2D"
input: "CONV_1/Pool"
input: "COV_2/W/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "COV_2/add"
op: "Add"
input: "COV_2/convolution_op"
input: "COV_2/b/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "COV_2/Relu"
op: "Relu"
input: "COV_2/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "COV_2/Pool"
op: "MaxPool"
input: "COV_2/Relu"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "ksize"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}

name: "MLP_1/truncated_normal/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "@\014\000\000\000\004\000\000"
    }
  }
}

name: "MLP_1/truncated_normal/mean"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "MLP_1/truncated_normal/stddev"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.10000000149011612
    }
  }
}

name: "MLP_1/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MLP_1/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "MLP_1/truncated_normal/mul"
op: "Mul"
input: "MLP_1/truncated_normal/TruncatedNormal"
input: "MLP_1/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "MLP_1/truncated_normal"
op: "Add"
input: "MLP_1/truncated_normal/mul"
input: "MLP_1/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "MLP_1/W_fc"
op: "VariableV2"
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3136
      }
      dim {
        size: 1024
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "MLP_1/W_fc/Assign"
op: "Assign"
input: "MLP_1/W_fc"
input: "MLP_1/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_1/W_fc"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "MLP_1/W_fc/read"
op: "Identity"
input: "MLP_1/W_fc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_1/W_fc"
    }
  }
}

name: "MLP_1/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 1024
        }
      }
      float_val: 0.10000000149011612
    }
  }
}

name: "MLP_1/bias_fc"
op: "VariableV2"
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1024
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "MLP_1/bias_fc/Assign"
op: "Assign"
input: "MLP_1/bias_fc"
input: "MLP_1/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_1/bias_fc"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "MLP_1/bias_fc/read"
op: "Identity"
input: "MLP_1/bias_fc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_1/bias_fc"
    }
  }
}

name: "MLP_1/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\377\377\377\377@\014\000\000"
    }
  }
}

name: "MLP_1/Reshape"
op: "Reshape"
input: "COV_2/Pool"
input: "MLP_1/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "MLP_1/MatMul"
op: "MatMul"
input: "MLP_1/Reshape"
input: "MLP_1/W_fc/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "MLP_1/Add"
op: "Add"
input: "MLP_1/MatMul"
input: "MLP_1/bias_fc/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "MLP_1/Relu"
op: "Relu"
input: "MLP_1/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "MLP_2/truncated_normal/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\004\000\000\n\000\000\000"
    }
  }
}

name: "MLP_2/truncated_normal/mean"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "MLP_2/truncated_normal/stddev"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.10000000149011612
    }
  }
}

name: "MLP_2/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MLP_2/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "MLP_2/truncated_normal/mul"
op: "Mul"
input: "MLP_2/truncated_normal/TruncatedNormal"
input: "MLP_2/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "MLP_2/truncated_normal"
op: "Add"
input: "MLP_2/truncated_normal/mul"
input: "MLP_2/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "MLP_2/W_fc"
op: "VariableV2"
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1024
      }
      dim {
        size: 10
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "MLP_2/W_fc/Assign"
op: "Assign"
input: "MLP_2/W_fc"
input: "MLP_2/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_2/W_fc"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "MLP_2/W_fc/read"
op: "Identity"
input: "MLP_2/W_fc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_2/W_fc"
    }
  }
}

name: "MLP_2/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 10
        }
      }
      float_val: 0.10000000149011612
    }
  }
}

name: "MLP_2/bias_fc"
op: "VariableV2"
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 10
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "MLP_2/bias_fc/Assign"
op: "Assign"
input: "MLP_2/bias_fc"
input: "MLP_2/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_2/bias_fc"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "MLP_2/bias_fc/read"
op: "Identity"
input: "MLP_2/bias_fc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_2/bias_fc"
    }
  }
}

name: "MLP_2/MatMul"
op: "MatMul"
input: "MLP_1/Relu"
input: "MLP_2/W_fc/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "MLP_2/Add"
op: "Add"
input: "MLP_2/MatMul"
input: "MLP_2/bias_fc/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "MLP_2/outputs"
op: "Softmax"
input: "MLP_2/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "LossPredict/Log"
op: "Log"
input: "MLP_2/outputs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "LossPredict/mul"
op: "Mul"
input: "Placeholder_1"
input: "LossPredict/Log"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "LossPredict/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}

name: "LossPredict/Mean"
op: "Mean"
input: "LossPredict/mul"
input: "LossPredict/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "LossPredict/Neg"
op: "Neg"
input: "LossPredict/Mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "LossPredict/gradients/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "LossPredict/gradients/grad_ys_0"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "LossPredict/gradients/Fill"
op: "Fill"
input: "LossPredict/gradients/Shape"
input: "LossPredict/gradients/grad_ys_0"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "LossPredict/gradients/LossPredict/Neg_grad/Neg"
op: "Neg"
input: "LossPredict/gradients/Fill"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "LossPredict/gradients/LossPredict/Mean_grad/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "LossPredict/gradients/LossPredict/Mean_grad/Reshape"
op: "Reshape"
input: "LossPredict/gradients/LossPredict/Neg_grad/Neg"
input: "LossPredict/gradients/LossPredict/Mean_grad/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "LossPredict/gradients/LossPredict/Mean_grad/Shape"
op: "Shape"
input: "LossPredict/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "LossPredict/gradients/LossPredict/Mean_grad/Tile"
op: "Tile"
input: "LossPredict/gradients/LossPredict/Mean_grad/Reshape"
input: "LossPredict/gradients/LossPredict/Mean_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}

name: "LossPredict/gradients/LossPredict/Mean_grad/Shape_1"
op: "Shape"
input: "LossPredict/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "LossPredict/gradients/LossPredict/Mean_grad/Shape_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "LossPredict/gradients/LossPredict/Mean_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}

name: "LossPredict/gradients/LossPredict/Mean_grad/Prod"
op: "Prod"
input: "LossPredict/gradients/LossPredict/Mean_grad/Shape_1"
input: "LossPredict/gradients/LossPredict/Mean_grad/Const"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "LossPredict/gradients/LossPredict/Mean_grad/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}

name: "LossPredict/gradients/LossPredict/Mean_grad/Prod_1"
op: "Prod"
input: "LossPredict/gradients/LossPredict/Mean_grad/Shape_2"
input: "LossPredict/gradients/LossPredict/Mean_grad/Const_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "LossPredict/gradients/LossPredict/Mean_grad/Maximum/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "LossPredict/gradients/LossPredict/Mean_grad/Maximum"
op: "Maximum"
input: "LossPredict/gradients/LossPredict/Mean_grad/Prod_1"
input: "LossPredict/gradients/LossPredict/Mean_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "LossPredict/gradients/LossPredict/Mean_grad/floordiv"
op: "FloorDiv"
input: "LossPredict/gradients/LossPredict/Mean_grad/Prod"
input: "LossPredict/gradients/LossPredict/Mean_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "LossPredict/gradients/LossPredict/Mean_grad/Cast"
op: "Cast"
input: "LossPredict/gradients/LossPredict/Mean_grad/floordiv"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "LossPredict/gradients/LossPredict/Mean_grad/truediv"
op: "RealDiv"
input: "LossPredict/gradients/LossPredict/Mean_grad/Tile"
input: "LossPredict/gradients/LossPredict/Mean_grad/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "LossPredict/gradients/LossPredict/mul_grad/Shape"
op: "Shape"
input: "Placeholder_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "LossPredict/gradients/LossPredict/mul_grad/Shape_1"
op: "Shape"
input: "LossPredict/Log"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "LossPredict/gradients/LossPredict/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "LossPredict/gradients/LossPredict/mul_grad/Shape"
input: "LossPredict/gradients/LossPredict/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "LossPredict/gradients/LossPredict/mul_grad/Mul"
op: "Mul"
input: "LossPredict/gradients/LossPredict/Mean_grad/truediv"
input: "LossPredict/Log"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "LossPredict/gradients/LossPredict/mul_grad/Sum"
op: "Sum"
input: "LossPredict/gradients/LossPredict/mul_grad/Mul"
input: "LossPredict/gradients/LossPredict/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "LossPredict/gradients/LossPredict/mul_grad/Reshape"
op: "Reshape"
input: "LossPredict/gradients/LossPredict/mul_grad/Sum"
input: "LossPredict/gradients/LossPredict/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "LossPredict/gradients/LossPredict/mul_grad/Mul_1"
op: "Mul"
input: "Placeholder_1"
input: "LossPredict/gradients/LossPredict/Mean_grad/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "LossPredict/gradients/LossPredict/mul_grad/Sum_1"
op: "Sum"
input: "LossPredict/gradients/LossPredict/mul_grad/Mul_1"
input: "LossPredict/gradients/LossPredict/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "LossPredict/gradients/LossPredict/mul_grad/Reshape_1"
op: "Reshape"
input: "LossPredict/gradients/LossPredict/mul_grad/Sum_1"
input: "LossPredict/gradients/LossPredict/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "LossPredict/gradients/LossPredict/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^LossPredict/gradients/LossPredict/mul_grad/Reshape"
input: "^LossPredict/gradients/LossPredict/mul_grad/Reshape_1"

name: "LossPredict/gradients/LossPredict/mul_grad/tuple/control_dependency"
op: "Identity"
input: "LossPredict/gradients/LossPredict/mul_grad/Reshape"
input: "^LossPredict/gradients/LossPredict/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@LossPredict/gradients/LossPredict/mul_grad/Reshape"
    }
  }
}

name: "LossPredict/gradients/LossPredict/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "LossPredict/gradients/LossPredict/mul_grad/Reshape_1"
input: "^LossPredict/gradients/LossPredict/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@LossPredict/gradients/LossPredict/mul_grad/Reshape_1"
    }
  }
}

name: "LossPredict/gradients/LossPredict/Log_grad/Reciprocal"
op: "Reciprocal"
input: "MLP_2/outputs"
input: "^LossPredict/gradients/LossPredict/mul_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "LossPredict/gradients/LossPredict/Log_grad/mul"
op: "Mul"
input: "LossPredict/gradients/LossPredict/mul_grad/tuple/control_dependency_1"
input: "LossPredict/gradients/LossPredict/Log_grad/Reciprocal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "LossPredict/gradients/MLP_2/outputs_grad/mul"
op: "Mul"
input: "LossPredict/gradients/LossPredict/Log_grad/mul"
input: "MLP_2/outputs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "LossPredict/gradients/MLP_2/outputs_grad/Sum/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "LossPredict/gradients/MLP_2/outputs_grad/Sum"
op: "Sum"
input: "LossPredict/gradients/MLP_2/outputs_grad/mul"
input: "LossPredict/gradients/MLP_2/outputs_grad/Sum/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: true
  }
}

name: "LossPredict/gradients/MLP_2/outputs_grad/sub"
op: "Sub"
input: "LossPredict/gradients/LossPredict/Log_grad/mul"
input: "LossPredict/gradients/MLP_2/outputs_grad/Sum"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "LossPredict/gradients/MLP_2/outputs_grad/mul_1"
op: "Mul"
input: "LossPredict/gradients/MLP_2/outputs_grad/sub"
input: "MLP_2/outputs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "LossPredict/gradients/MLP_2/Add_grad/Shape"
op: "Shape"
input: "MLP_2/MatMul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "LossPredict/gradients/MLP_2/Add_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 10
    }
  }
}

name: "LossPredict/gradients/MLP_2/Add_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "LossPredict/gradients/MLP_2/Add_grad/Shape"
input: "LossPredict/gradients/MLP_2/Add_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "LossPredict/gradients/MLP_2/Add_grad/Sum"
op: "Sum"
input: "LossPredict/gradients/MLP_2/outputs_grad/mul_1"
input: "LossPredict/gradients/MLP_2/Add_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "LossPredict/gradients/MLP_2/Add_grad/Reshape"
op: "Reshape"
input: "LossPredict/gradients/MLP_2/Add_grad/Sum"
input: "LossPredict/gradients/MLP_2/Add_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "LossPredict/gradients/MLP_2/Add_grad/Sum_1"
op: "Sum"
input: "LossPredict/gradients/MLP_2/outputs_grad/mul_1"
input: "LossPredict/gradients/MLP_2/Add_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "LossPredict/gradients/MLP_2/Add_grad/Reshape_1"
op: "Reshape"
input: "LossPredict/gradients/MLP_2/Add_grad/Sum_1"
input: "LossPredict/gradients/MLP_2/Add_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "LossPredict/gradients/MLP_2/Add_grad/tuple/group_deps"
op: "NoOp"
input: "^LossPredict/gradients/MLP_2/Add_grad/Reshape"
input: "^LossPredict/gradients/MLP_2/Add_grad/Reshape_1"

name: "LossPredict/gradients/MLP_2/Add_grad/tuple/control_dependency"
op: "Identity"
input: "LossPredict/gradients/MLP_2/Add_grad/Reshape"
input: "^LossPredict/gradients/MLP_2/Add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@LossPredict/gradients/MLP_2/Add_grad/Reshape"
    }
  }
}

name: "LossPredict/gradients/MLP_2/Add_grad/tuple/control_dependency_1"
op: "Identity"
input: "LossPredict/gradients/MLP_2/Add_grad/Reshape_1"
input: "^LossPredict/gradients/MLP_2/Add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@LossPredict/gradients/MLP_2/Add_grad/Reshape_1"
    }
  }
}

name: "LossPredict/gradients/MLP_2/MatMul_grad/MatMul"
op: "MatMul"
input: "LossPredict/gradients/MLP_2/Add_grad/tuple/control_dependency"
input: "MLP_2/W_fc/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}

name: "LossPredict/gradients/MLP_2/MatMul_grad/MatMul_1"
op: "MatMul"
input: "MLP_1/Relu"
input: "LossPredict/gradients/MLP_2/Add_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "LossPredict/gradients/MLP_2/MatMul_grad/tuple/group_deps"
op: "NoOp"
input: "^LossPredict/gradients/MLP_2/MatMul_grad/MatMul"
input: "^LossPredict/gradients/MLP_2/MatMul_grad/MatMul_1"

name: "LossPredict/gradients/MLP_2/MatMul_grad/tuple/control_dependency"
op: "Identity"
input: "LossPredict/gradients/MLP_2/MatMul_grad/MatMul"
input: "^LossPredict/gradients/MLP_2/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@LossPredict/gradients/MLP_2/MatMul_grad/MatMul"
    }
  }
}

name: "LossPredict/gradients/MLP_2/MatMul_grad/tuple/control_dependency_1"
op: "Identity"
input: "LossPredict/gradients/MLP_2/MatMul_grad/MatMul_1"
input: "^LossPredict/gradients/MLP_2/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@LossPredict/gradients/MLP_2/MatMul_grad/MatMul_1"
    }
  }
}

name: "LossPredict/gradients/MLP_1/Relu_grad/ReluGrad"
op: "ReluGrad"
input: "LossPredict/gradients/MLP_2/MatMul_grad/tuple/control_dependency"
input: "MLP_1/Relu"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "LossPredict/gradients/MLP_1/Add_grad/Shape"
op: "Shape"
input: "MLP_1/MatMul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "LossPredict/gradients/MLP_1/Add_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1024
    }
  }
}

name: "LossPredict/gradients/MLP_1/Add_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "LossPredict/gradients/MLP_1/Add_grad/Shape"
input: "LossPredict/gradients/MLP_1/Add_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "LossPredict/gradients/MLP_1/Add_grad/Sum"
op: "Sum"
input: "LossPredict/gradients/MLP_1/Relu_grad/ReluGrad"
input: "LossPredict/gradients/MLP_1/Add_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "LossPredict/gradients/MLP_1/Add_grad/Reshape"
op: "Reshape"
input: "LossPredict/gradients/MLP_1/Add_grad/Sum"
input: "LossPredict/gradients/MLP_1/Add_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "LossPredict/gradients/MLP_1/Add_grad/Sum_1"
op: "Sum"
input: "LossPredict/gradients/MLP_1/Relu_grad/ReluGrad"
input: "LossPredict/gradients/MLP_1/Add_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "LossPredict/gradients/MLP_1/Add_grad/Reshape_1"
op: "Reshape"
input: "LossPredict/gradients/MLP_1/Add_grad/Sum_1"
input: "LossPredict/gradients/MLP_1/Add_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "LossPredict/gradients/MLP_1/Add_grad/tuple/group_deps"
op: "NoOp"
input: "^LossPredict/gradients/MLP_1/Add_grad/Reshape"
input: "^LossPredict/gradients/MLP_1/Add_grad/Reshape_1"

name: "LossPredict/gradients/MLP_1/Add_grad/tuple/control_dependency"
op: "Identity"
input: "LossPredict/gradients/MLP_1/Add_grad/Reshape"
input: "^LossPredict/gradients/MLP_1/Add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@LossPredict/gradients/MLP_1/Add_grad/Reshape"
    }
  }
}

name: "LossPredict/gradients/MLP_1/Add_grad/tuple/control_dependency_1"
op: "Identity"
input: "LossPredict/gradients/MLP_1/Add_grad/Reshape_1"
input: "^LossPredict/gradients/MLP_1/Add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@LossPredict/gradients/MLP_1/Add_grad/Reshape_1"
    }
  }
}

name: "LossPredict/gradients/MLP_1/MatMul_grad/MatMul"
op: "MatMul"
input: "LossPredict/gradients/MLP_1/Add_grad/tuple/control_dependency"
input: "MLP_1/W_fc/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}

name: "LossPredict/gradients/MLP_1/MatMul_grad/MatMul_1"
op: "MatMul"
input: "MLP_1/Reshape"
input: "LossPredict/gradients/MLP_1/Add_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "LossPredict/gradients/MLP_1/MatMul_grad/tuple/group_deps"
op: "NoOp"
input: "^LossPredict/gradients/MLP_1/MatMul_grad/MatMul"
input: "^LossPredict/gradients/MLP_1/MatMul_grad/MatMul_1"

name: "LossPredict/gradients/MLP_1/MatMul_grad/tuple/control_dependency"
op: "Identity"
input: "LossPredict/gradients/MLP_1/MatMul_grad/MatMul"
input: "^LossPredict/gradients/MLP_1/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@LossPredict/gradients/MLP_1/MatMul_grad/MatMul"
    }
  }
}

name: "LossPredict/gradients/MLP_1/MatMul_grad/tuple/control_dependency_1"
op: "Identity"
input: "LossPredict/gradients/MLP_1/MatMul_grad/MatMul_1"
input: "^LossPredict/gradients/MLP_1/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@LossPredict/gradients/MLP_1/MatMul_grad/MatMul_1"
    }
  }
}

name: "LossPredict/gradients/MLP_1/Reshape_grad/Shape"
op: "Shape"
input: "COV_2/Pool"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "LossPredict/gradients/MLP_1/Reshape_grad/Reshape"
op: "Reshape"
input: "LossPredict/gradients/MLP_1/MatMul_grad/tuple/control_dependency"
input: "LossPredict/gradients/MLP_1/Reshape_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "LossPredict/gradients/COV_2/Pool_grad/MaxPoolGrad"
op: "MaxPoolGrad"
input: "COV_2/Relu"
input: "COV_2/Pool"
input: "LossPredict/gradients/MLP_1/Reshape_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "ksize"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}

name: "LossPredict/gradients/COV_2/Relu_grad/ReluGrad"
op: "ReluGrad"
input: "LossPredict/gradients/COV_2/Pool_grad/MaxPoolGrad"
input: "COV_2/Relu"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "LossPredict/gradients/COV_2/add_grad/Shape"
op: "Shape"
input: "COV_2/convolution_op"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "LossPredict/gradients/COV_2/add_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 64
    }
  }
}

name: "LossPredict/gradients/COV_2/add_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "LossPredict/gradients/COV_2/add_grad/Shape"
input: "LossPredict/gradients/COV_2/add_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "LossPredict/gradients/COV_2/add_grad/Sum"
op: "Sum"
input: "LossPredict/gradients/COV_2/Relu_grad/ReluGrad"
input: "LossPredict/gradients/COV_2/add_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "LossPredict/gradients/COV_2/add_grad/Reshape"
op: "Reshape"
input: "LossPredict/gradients/COV_2/add_grad/Sum"
input: "LossPredict/gradients/COV_2/add_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "LossPredict/gradients/COV_2/add_grad/Sum_1"
op: "Sum"
input: "LossPredict/gradients/COV_2/Relu_grad/ReluGrad"
input: "LossPredict/gradients/COV_2/add_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "LossPredict/gradients/COV_2/add_grad/Reshape_1"
op: "Reshape"
input: "LossPredict/gradients/COV_2/add_grad/Sum_1"
input: "LossPredict/gradients/COV_2/add_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "LossPredict/gradients/COV_2/add_grad/tuple/group_deps"
op: "NoOp"
input: "^LossPredict/gradients/COV_2/add_grad/Reshape"
input: "^LossPredict/gradients/COV_2/add_grad/Reshape_1"

name: "LossPredict/gradients/COV_2/add_grad/tuple/control_dependency"
op: "Identity"
input: "LossPredict/gradients/COV_2/add_grad/Reshape"
input: "^LossPredict/gradients/COV_2/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@LossPredict/gradients/COV_2/add_grad/Reshape"
    }
  }
}

name: "LossPredict/gradients/COV_2/add_grad/tuple/control_dependency_1"
op: "Identity"
input: "LossPredict/gradients/COV_2/add_grad/Reshape_1"
input: "^LossPredict/gradients/COV_2/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@LossPredict/gradients/COV_2/add_grad/Reshape_1"
    }
  }
}

name: "LossPredict/gradients/COV_2/convolution_op_grad/ShapeN"
op: "ShapeN"
input: "CONV_1/Pool"
input: "COV_2/W/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "LossPredict/gradients/COV_2/convolution_op_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "LossPredict/gradients/COV_2/convolution_op_grad/ShapeN"
input: "COV_2/W/read"
input: "LossPredict/gradients/COV_2/add_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "LossPredict/gradients/COV_2/convolution_op_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "CONV_1/Pool"
input: "LossPredict/gradients/COV_2/convolution_op_grad/ShapeN:1"
input: "LossPredict/gradients/COV_2/add_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "LossPredict/gradients/COV_2/convolution_op_grad/tuple/group_deps"
op: "NoOp"
input: "^LossPredict/gradients/COV_2/convolution_op_grad/Conv2DBackpropFilter"
input: "^LossPredict/gradients/COV_2/convolution_op_grad/Conv2DBackpropInput"

name: "LossPredict/gradients/COV_2/convolution_op_grad/tuple/control_dependency"
op: "Identity"
input: "LossPredict/gradients/COV_2/convolution_op_grad/Conv2DBackpropInput"
input: "^LossPredict/gradients/COV_2/convolution_op_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@LossPredict/gradients/COV_2/convolution_op_grad/Conv2DBackpropInput"
    }
  }
}

name: "LossPredict/gradients/COV_2/convolution_op_grad/tuple/control_dependency_1"
op: "Identity"
input: "LossPredict/gradients/COV_2/convolution_op_grad/Conv2DBackpropFilter"
input: "^LossPredict/gradients/COV_2/convolution_op_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@LossPredict/gradients/COV_2/convolution_op_grad/Conv2DBackpropFilter"
    }
  }
}

name: "LossPredict/gradients/CONV_1/Pool_grad/MaxPoolGrad"
op: "MaxPoolGrad"
input: "CONV_1/Relu"
input: "CONV_1/Pool"
input: "LossPredict/gradients/COV_2/convolution_op_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "ksize"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}

name: "LossPredict/gradients/CONV_1/Relu_grad/ReluGrad"
op: "ReluGrad"
input: "LossPredict/gradients/CONV_1/Pool_grad/MaxPoolGrad"
input: "CONV_1/Relu"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "LossPredict/gradients/CONV_1/add_grad/Shape"
op: "Shape"
input: "CONV_1/convolution_op"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "LossPredict/gradients/CONV_1/add_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 32
    }
  }
}

name: "LossPredict/gradients/CONV_1/add_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "LossPredict/gradients/CONV_1/add_grad/Shape"
input: "LossPredict/gradients/CONV_1/add_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "LossPredict/gradients/CONV_1/add_grad/Sum"
op: "Sum"
input: "LossPredict/gradients/CONV_1/Relu_grad/ReluGrad"
input: "LossPredict/gradients/CONV_1/add_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "LossPredict/gradients/CONV_1/add_grad/Reshape"
op: "Reshape"
input: "LossPredict/gradients/CONV_1/add_grad/Sum"
input: "LossPredict/gradients/CONV_1/add_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "LossPredict/gradients/CONV_1/add_grad/Sum_1"
op: "Sum"
input: "LossPredict/gradients/CONV_1/Relu_grad/ReluGrad"
input: "LossPredict/gradients/CONV_1/add_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "LossPredict/gradients/CONV_1/add_grad/Reshape_1"
op: "Reshape"
input: "LossPredict/gradients/CONV_1/add_grad/Sum_1"
input: "LossPredict/gradients/CONV_1/add_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "LossPredict/gradients/CONV_1/add_grad/tuple/group_deps"
op: "NoOp"
input: "^LossPredict/gradients/CONV_1/add_grad/Reshape"
input: "^LossPredict/gradients/CONV_1/add_grad/Reshape_1"

name: "LossPredict/gradients/CONV_1/add_grad/tuple/control_dependency"
op: "Identity"
input: "LossPredict/gradients/CONV_1/add_grad/Reshape"
input: "^LossPredict/gradients/CONV_1/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@LossPredict/gradients/CONV_1/add_grad/Reshape"
    }
  }
}

name: "LossPredict/gradients/CONV_1/add_grad/tuple/control_dependency_1"
op: "Identity"
input: "LossPredict/gradients/CONV_1/add_grad/Reshape_1"
input: "^LossPredict/gradients/CONV_1/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@LossPredict/gradients/CONV_1/add_grad/Reshape_1"
    }
  }
}

name: "LossPredict/gradients/CONV_1/convolution_op_grad/ShapeN"
op: "ShapeN"
input: "Reshape"
input: "CONV_1/W/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "LossPredict/gradients/CONV_1/convolution_op_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "LossPredict/gradients/CONV_1/convolution_op_grad/ShapeN"
input: "CONV_1/W/read"
input: "LossPredict/gradients/CONV_1/add_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "LossPredict/gradients/CONV_1/convolution_op_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "Reshape"
input: "LossPredict/gradients/CONV_1/convolution_op_grad/ShapeN:1"
input: "LossPredict/gradients/CONV_1/add_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "LossPredict/gradients/CONV_1/convolution_op_grad/tuple/group_deps"
op: "NoOp"
input: "^LossPredict/gradients/CONV_1/convolution_op_grad/Conv2DBackpropFilter"
input: "^LossPredict/gradients/CONV_1/convolution_op_grad/Conv2DBackpropInput"

name: "LossPredict/gradients/CONV_1/convolution_op_grad/tuple/control_dependency"
op: "Identity"
input: "LossPredict/gradients/CONV_1/convolution_op_grad/Conv2DBackpropInput"
input: "^LossPredict/gradients/CONV_1/convolution_op_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@LossPredict/gradients/CONV_1/convolution_op_grad/Conv2DBackpropInput"
    }
  }
}

name: "LossPredict/gradients/CONV_1/convolution_op_grad/tuple/control_dependency_1"
op: "Identity"
input: "LossPredict/gradients/CONV_1/convolution_op_grad/Conv2DBackpropFilter"
input: "^LossPredict/gradients/CONV_1/convolution_op_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@LossPredict/gradients/CONV_1/convolution_op_grad/Conv2DBackpropFilter"
    }
  }
}

name: "LossPredict/beta1_power/initial_value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@CONV_1/W"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.8999999761581421
    }
  }
}

name: "LossPredict/beta1_power"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@CONV_1/W"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "LossPredict/beta1_power/Assign"
op: "Assign"
input: "LossPredict/beta1_power"
input: "LossPredict/beta1_power/initial_value"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@CONV_1/W"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "LossPredict/beta1_power/read"
op: "Identity"
input: "LossPredict/beta1_power"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@CONV_1/W"
    }
  }
}

name: "LossPredict/beta2_power/initial_value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@CONV_1/W"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "LossPredict/beta2_power"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@CONV_1/W"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "LossPredict/beta2_power/Assign"
op: "Assign"
input: "LossPredict/beta2_power"
input: "LossPredict/beta2_power/initial_value"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@CONV_1/W"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "LossPredict/beta2_power/read"
op: "Identity"
input: "LossPredict/beta2_power"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@CONV_1/W"
    }
  }
}

name: "LossPredict/CONV_1/W/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@CONV_1/W"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
      float_val: 0.0
    }
  }
}

name: "LossPredict/CONV_1/W/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@CONV_1/W"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 1
      }
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "LossPredict/CONV_1/W/Adam/Assign"
op: "Assign"
input: "LossPredict/CONV_1/W/Adam"
input: "LossPredict/CONV_1/W/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@CONV_1/W"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "LossPredict/CONV_1/W/Adam/read"
op: "Identity"
input: "LossPredict/CONV_1/W/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@CONV_1/W"
    }
  }
}

name: "LossPredict/CONV_1/W/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@CONV_1/W"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
      float_val: 0.0
    }
  }
}

name: "LossPredict/CONV_1/W/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@CONV_1/W"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 1
      }
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "LossPredict/CONV_1/W/Adam_1/Assign"
op: "Assign"
input: "LossPredict/CONV_1/W/Adam_1"
input: "LossPredict/CONV_1/W/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@CONV_1/W"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "LossPredict/CONV_1/W/Adam_1/read"
op: "Identity"
input: "LossPredict/CONV_1/W/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@CONV_1/W"
    }
  }
}

name: "LossPredict/CONV_1/b/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@CONV_1/b"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 32
        }
      }
      float_val: 0.0
    }
  }
}

name: "LossPredict/CONV_1/b/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@CONV_1/b"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "LossPredict/CONV_1/b/Adam/Assign"
op: "Assign"
input: "LossPredict/CONV_1/b/Adam"
input: "LossPredict/CONV_1/b/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@CONV_1/b"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "LossPredict/CONV_1/b/Adam/read"
op: "Identity"
input: "LossPredict/CONV_1/b/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@CONV_1/b"
    }
  }
}

name: "LossPredict/CONV_1/b/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@CONV_1/b"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 32
        }
      }
      float_val: 0.0
    }
  }
}

name: "LossPredict/CONV_1/b/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@CONV_1/b"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "LossPredict/CONV_1/b/Adam_1/Assign"
op: "Assign"
input: "LossPredict/CONV_1/b/Adam_1"
input: "LossPredict/CONV_1/b/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@CONV_1/b"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "LossPredict/CONV_1/b/Adam_1/read"
op: "Identity"
input: "LossPredict/CONV_1/b/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@CONV_1/b"
    }
  }
}

name: "LossPredict/COV_2/W/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@COV_2/W"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
    }
  }
}

name: "LossPredict/COV_2/W/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@COV_2/W"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "LossPredict/COV_2/W/Adam/Initializer/zeros"
op: "Fill"
input: "LossPredict/COV_2/W/Adam/Initializer/zeros/shape_as_tensor"
input: "LossPredict/COV_2/W/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@COV_2/W"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "LossPredict/COV_2/W/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@COV_2/W"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 32
      }
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "LossPredict/COV_2/W/Adam/Assign"
op: "Assign"
input: "LossPredict/COV_2/W/Adam"
input: "LossPredict/COV_2/W/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@COV_2/W"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "LossPredict/COV_2/W/Adam/read"
op: "Identity"
input: "LossPredict/COV_2/W/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@COV_2/W"
    }
  }
}

name: "LossPredict/COV_2/W/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@COV_2/W"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
    }
  }
}

name: "LossPredict/COV_2/W/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@COV_2/W"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "LossPredict/COV_2/W/Adam_1/Initializer/zeros"
op: "Fill"
input: "LossPredict/COV_2/W/Adam_1/Initializer/zeros/shape_as_tensor"
input: "LossPredict/COV_2/W/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@COV_2/W"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "LossPredict/COV_2/W/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@COV_2/W"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 32
      }
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "LossPredict/COV_2/W/Adam_1/Assign"
op: "Assign"
input: "LossPredict/COV_2/W/Adam_1"
input: "LossPredict/COV_2/W/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@COV_2/W"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "LossPredict/COV_2/W/Adam_1/read"
op: "Identity"
input: "LossPredict/COV_2/W/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@COV_2/W"
    }
  }
}

name: "LossPredict/COV_2/b/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@COV_2/b"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 64
        }
      }
      float_val: 0.0
    }
  }
}

name: "LossPredict/COV_2/b/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@COV_2/b"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "LossPredict/COV_2/b/Adam/Assign"
op: "Assign"
input: "LossPredict/COV_2/b/Adam"
input: "LossPredict/COV_2/b/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@COV_2/b"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "LossPredict/COV_2/b/Adam/read"
op: "Identity"
input: "LossPredict/COV_2/b/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@COV_2/b"
    }
  }
}

name: "LossPredict/COV_2/b/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@COV_2/b"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 64
        }
      }
      float_val: 0.0
    }
  }
}

name: "LossPredict/COV_2/b/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@COV_2/b"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "LossPredict/COV_2/b/Adam_1/Assign"
op: "Assign"
input: "LossPredict/COV_2/b/Adam_1"
input: "LossPredict/COV_2/b/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@COV_2/b"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "LossPredict/COV_2/b/Adam_1/read"
op: "Identity"
input: "LossPredict/COV_2/b/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@COV_2/b"
    }
  }
}

name: "LossPredict/MLP_1/W_fc/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_1/W_fc"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "@\014\000\000\000\004\000\000"
    }
  }
}

name: "LossPredict/MLP_1/W_fc/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_1/W_fc"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "LossPredict/MLP_1/W_fc/Adam/Initializer/zeros"
op: "Fill"
input: "LossPredict/MLP_1/W_fc/Adam/Initializer/zeros/shape_as_tensor"
input: "LossPredict/MLP_1/W_fc/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_1/W_fc"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "LossPredict/MLP_1/W_fc/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_1/W_fc"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3136
      }
      dim {
        size: 1024
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "LossPredict/MLP_1/W_fc/Adam/Assign"
op: "Assign"
input: "LossPredict/MLP_1/W_fc/Adam"
input: "LossPredict/MLP_1/W_fc/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_1/W_fc"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "LossPredict/MLP_1/W_fc/Adam/read"
op: "Identity"
input: "LossPredict/MLP_1/W_fc/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_1/W_fc"
    }
  }
}

name: "LossPredict/MLP_1/W_fc/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_1/W_fc"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "@\014\000\000\000\004\000\000"
    }
  }
}

name: "LossPredict/MLP_1/W_fc/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_1/W_fc"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "LossPredict/MLP_1/W_fc/Adam_1/Initializer/zeros"
op: "Fill"
input: "LossPredict/MLP_1/W_fc/Adam_1/Initializer/zeros/shape_as_tensor"
input: "LossPredict/MLP_1/W_fc/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_1/W_fc"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "LossPredict/MLP_1/W_fc/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_1/W_fc"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3136
      }
      dim {
        size: 1024
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "LossPredict/MLP_1/W_fc/Adam_1/Assign"
op: "Assign"
input: "LossPredict/MLP_1/W_fc/Adam_1"
input: "LossPredict/MLP_1/W_fc/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_1/W_fc"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "LossPredict/MLP_1/W_fc/Adam_1/read"
op: "Identity"
input: "LossPredict/MLP_1/W_fc/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_1/W_fc"
    }
  }
}

name: "LossPredict/MLP_1/bias_fc/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_1/bias_fc"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1024
    }
  }
}

name: "LossPredict/MLP_1/bias_fc/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_1/bias_fc"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "LossPredict/MLP_1/bias_fc/Adam/Initializer/zeros"
op: "Fill"
input: "LossPredict/MLP_1/bias_fc/Adam/Initializer/zeros/shape_as_tensor"
input: "LossPredict/MLP_1/bias_fc/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_1/bias_fc"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "LossPredict/MLP_1/bias_fc/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_1/bias_fc"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1024
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "LossPredict/MLP_1/bias_fc/Adam/Assign"
op: "Assign"
input: "LossPredict/MLP_1/bias_fc/Adam"
input: "LossPredict/MLP_1/bias_fc/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_1/bias_fc"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "LossPredict/MLP_1/bias_fc/Adam/read"
op: "Identity"
input: "LossPredict/MLP_1/bias_fc/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_1/bias_fc"
    }
  }
}

name: "LossPredict/MLP_1/bias_fc/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_1/bias_fc"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1024
    }
  }
}

name: "LossPredict/MLP_1/bias_fc/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_1/bias_fc"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "LossPredict/MLP_1/bias_fc/Adam_1/Initializer/zeros"
op: "Fill"
input: "LossPredict/MLP_1/bias_fc/Adam_1/Initializer/zeros/shape_as_tensor"
input: "LossPredict/MLP_1/bias_fc/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_1/bias_fc"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "LossPredict/MLP_1/bias_fc/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_1/bias_fc"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1024
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "LossPredict/MLP_1/bias_fc/Adam_1/Assign"
op: "Assign"
input: "LossPredict/MLP_1/bias_fc/Adam_1"
input: "LossPredict/MLP_1/bias_fc/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_1/bias_fc"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "LossPredict/MLP_1/bias_fc/Adam_1/read"
op: "Identity"
input: "LossPredict/MLP_1/bias_fc/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_1/bias_fc"
    }
  }
}

name: "LossPredict/MLP_2/W_fc/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_2/W_fc"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\004\000\000\n\000\000\000"
    }
  }
}

name: "LossPredict/MLP_2/W_fc/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_2/W_fc"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "LossPredict/MLP_2/W_fc/Adam/Initializer/zeros"
op: "Fill"
input: "LossPredict/MLP_2/W_fc/Adam/Initializer/zeros/shape_as_tensor"
input: "LossPredict/MLP_2/W_fc/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_2/W_fc"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "LossPredict/MLP_2/W_fc/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_2/W_fc"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1024
      }
      dim {
        size: 10
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "LossPredict/MLP_2/W_fc/Adam/Assign"
op: "Assign"
input: "LossPredict/MLP_2/W_fc/Adam"
input: "LossPredict/MLP_2/W_fc/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_2/W_fc"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "LossPredict/MLP_2/W_fc/Adam/read"
op: "Identity"
input: "LossPredict/MLP_2/W_fc/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_2/W_fc"
    }
  }
}

name: "LossPredict/MLP_2/W_fc/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_2/W_fc"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\004\000\000\n\000\000\000"
    }
  }
}

name: "LossPredict/MLP_2/W_fc/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_2/W_fc"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "LossPredict/MLP_2/W_fc/Adam_1/Initializer/zeros"
op: "Fill"
input: "LossPredict/MLP_2/W_fc/Adam_1/Initializer/zeros/shape_as_tensor"
input: "LossPredict/MLP_2/W_fc/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_2/W_fc"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "LossPredict/MLP_2/W_fc/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_2/W_fc"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1024
      }
      dim {
        size: 10
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "LossPredict/MLP_2/W_fc/Adam_1/Assign"
op: "Assign"
input: "LossPredict/MLP_2/W_fc/Adam_1"
input: "LossPredict/MLP_2/W_fc/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_2/W_fc"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "LossPredict/MLP_2/W_fc/Adam_1/read"
op: "Identity"
input: "LossPredict/MLP_2/W_fc/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_2/W_fc"
    }
  }
}

name: "LossPredict/MLP_2/bias_fc/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_2/bias_fc"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 10
        }
      }
      float_val: 0.0
    }
  }
}

name: "LossPredict/MLP_2/bias_fc/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_2/bias_fc"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 10
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "LossPredict/MLP_2/bias_fc/Adam/Assign"
op: "Assign"
input: "LossPredict/MLP_2/bias_fc/Adam"
input: "LossPredict/MLP_2/bias_fc/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_2/bias_fc"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "LossPredict/MLP_2/bias_fc/Adam/read"
op: "Identity"
input: "LossPredict/MLP_2/bias_fc/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_2/bias_fc"
    }
  }
}

name: "LossPredict/MLP_2/bias_fc/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_2/bias_fc"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 10
        }
      }
      float_val: 0.0
    }
  }
}

name: "LossPredict/MLP_2/bias_fc/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_2/bias_fc"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 10
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "LossPredict/MLP_2/bias_fc/Adam_1/Assign"
op: "Assign"
input: "LossPredict/MLP_2/bias_fc/Adam_1"
input: "LossPredict/MLP_2/bias_fc/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_2/bias_fc"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "LossPredict/MLP_2/bias_fc/Adam_1/read"
op: "Identity"
input: "LossPredict/MLP_2/bias_fc/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_2/bias_fc"
    }
  }
}

name: "LossPredict/train_step/learning_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-05
    }
  }
}

name: "LossPredict/train_step/beta1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.8999999761581421
    }
  }
}

name: "LossPredict/train_step/beta2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "LossPredict/train_step/epsilon"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.99999993922529e-09
    }
  }
}

name: "LossPredict/train_step/update_CONV_1/W/ApplyAdam"
op: "ApplyAdam"
input: "CONV_1/W"
input: "LossPredict/CONV_1/W/Adam"
input: "LossPredict/CONV_1/W/Adam_1"
input: "LossPredict/beta1_power/read"
input: "LossPredict/beta2_power/read"
input: "LossPredict/train_step/learning_rate"
input: "LossPredict/train_step/beta1"
input: "LossPredict/train_step/beta2"
input: "LossPredict/train_step/epsilon"
input: "LossPredict/gradients/CONV_1/convolution_op_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@CONV_1/W"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}

name: "LossPredict/train_step/update_CONV_1/b/ApplyAdam"
op: "ApplyAdam"
input: "CONV_1/b"
input: "LossPredict/CONV_1/b/Adam"
input: "LossPredict/CONV_1/b/Adam_1"
input: "LossPredict/beta1_power/read"
input: "LossPredict/beta2_power/read"
input: "LossPredict/train_step/learning_rate"
input: "LossPredict/train_step/beta1"
input: "LossPredict/train_step/beta2"
input: "LossPredict/train_step/epsilon"
input: "LossPredict/gradients/CONV_1/add_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@CONV_1/b"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}

name: "LossPredict/train_step/update_COV_2/W/ApplyAdam"
op: "ApplyAdam"
input: "COV_2/W"
input: "LossPredict/COV_2/W/Adam"
input: "LossPredict/COV_2/W/Adam_1"
input: "LossPredict/beta1_power/read"
input: "LossPredict/beta2_power/read"
input: "LossPredict/train_step/learning_rate"
input: "LossPredict/train_step/beta1"
input: "LossPredict/train_step/beta2"
input: "LossPredict/train_step/epsilon"
input: "LossPredict/gradients/COV_2/convolution_op_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@COV_2/W"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}

name: "LossPredict/train_step/update_COV_2/b/ApplyAdam"
op: "ApplyAdam"
input: "COV_2/b"
input: "LossPredict/COV_2/b/Adam"
input: "LossPredict/COV_2/b/Adam_1"
input: "LossPredict/beta1_power/read"
input: "LossPredict/beta2_power/read"
input: "LossPredict/train_step/learning_rate"
input: "LossPredict/train_step/beta1"
input: "LossPredict/train_step/beta2"
input: "LossPredict/train_step/epsilon"
input: "LossPredict/gradients/COV_2/add_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@COV_2/b"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}

name: "LossPredict/train_step/update_MLP_1/W_fc/ApplyAdam"
op: "ApplyAdam"
input: "MLP_1/W_fc"
input: "LossPredict/MLP_1/W_fc/Adam"
input: "LossPredict/MLP_1/W_fc/Adam_1"
input: "LossPredict/beta1_power/read"
input: "LossPredict/beta2_power/read"
input: "LossPredict/train_step/learning_rate"
input: "LossPredict/train_step/beta1"
input: "LossPredict/train_step/beta2"
input: "LossPredict/train_step/epsilon"
input: "LossPredict/gradients/MLP_1/MatMul_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_1/W_fc"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}

name: "LossPredict/train_step/update_MLP_1/bias_fc/ApplyAdam"
op: "ApplyAdam"
input: "MLP_1/bias_fc"
input: "LossPredict/MLP_1/bias_fc/Adam"
input: "LossPredict/MLP_1/bias_fc/Adam_1"
input: "LossPredict/beta1_power/read"
input: "LossPredict/beta2_power/read"
input: "LossPredict/train_step/learning_rate"
input: "LossPredict/train_step/beta1"
input: "LossPredict/train_step/beta2"
input: "LossPredict/train_step/epsilon"
input: "LossPredict/gradients/MLP_1/Add_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_1/bias_fc"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}

name: "LossPredict/train_step/update_MLP_2/W_fc/ApplyAdam"
op: "ApplyAdam"
input: "MLP_2/W_fc"
input: "LossPredict/MLP_2/W_fc/Adam"
input: "LossPredict/MLP_2/W_fc/Adam_1"
input: "LossPredict/beta1_power/read"
input: "LossPredict/beta2_power/read"
input: "LossPredict/train_step/learning_rate"
input: "LossPredict/train_step/beta1"
input: "LossPredict/train_step/beta2"
input: "LossPredict/train_step/epsilon"
input: "LossPredict/gradients/MLP_2/MatMul_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_2/W_fc"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}

name: "LossPredict/train_step/update_MLP_2/bias_fc/ApplyAdam"
op: "ApplyAdam"
input: "MLP_2/bias_fc"
input: "LossPredict/MLP_2/bias_fc/Adam"
input: "LossPredict/MLP_2/bias_fc/Adam_1"
input: "LossPredict/beta1_power/read"
input: "LossPredict/beta2_power/read"
input: "LossPredict/train_step/learning_rate"
input: "LossPredict/train_step/beta1"
input: "LossPredict/train_step/beta2"
input: "LossPredict/train_step/epsilon"
input: "LossPredict/gradients/MLP_2/Add_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_2/bias_fc"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}

name: "LossPredict/train_step/mul"
op: "Mul"
input: "LossPredict/beta1_power/read"
input: "LossPredict/train_step/beta1"
input: "^LossPredict/train_step/update_CONV_1/W/ApplyAdam"
input: "^LossPredict/train_step/update_CONV_1/b/ApplyAdam"
input: "^LossPredict/train_step/update_COV_2/W/ApplyAdam"
input: "^LossPredict/train_step/update_COV_2/b/ApplyAdam"
input: "^LossPredict/train_step/update_MLP_1/W_fc/ApplyAdam"
input: "^LossPredict/train_step/update_MLP_1/bias_fc/ApplyAdam"
input: "^LossPredict/train_step/update_MLP_2/W_fc/ApplyAdam"
input: "^LossPredict/train_step/update_MLP_2/bias_fc/ApplyAdam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@CONV_1/W"
    }
  }
}

name: "LossPredict/train_step/Assign"
op: "Assign"
input: "LossPredict/beta1_power"
input: "LossPredict/train_step/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@CONV_1/W"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "LossPredict/train_step/mul_1"
op: "Mul"
input: "LossPredict/beta2_power/read"
input: "LossPredict/train_step/beta2"
input: "^LossPredict/train_step/update_CONV_1/W/ApplyAdam"
input: "^LossPredict/train_step/update_CONV_1/b/ApplyAdam"
input: "^LossPredict/train_step/update_COV_2/W/ApplyAdam"
input: "^LossPredict/train_step/update_COV_2/b/ApplyAdam"
input: "^LossPredict/train_step/update_MLP_1/W_fc/ApplyAdam"
input: "^LossPredict/train_step/update_MLP_1/bias_fc/ApplyAdam"
input: "^LossPredict/train_step/update_MLP_2/W_fc/ApplyAdam"
input: "^LossPredict/train_step/update_MLP_2/bias_fc/ApplyAdam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@CONV_1/W"
    }
  }
}

name: "LossPredict/train_step/Assign_1"
op: "Assign"
input: "LossPredict/beta2_power"
input: "LossPredict/train_step/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@CONV_1/W"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "LossPredict/train_step"
op: "NoOp"
input: "^LossPredict/train_step/Assign"
input: "^LossPredict/train_step/Assign_1"
input: "^LossPredict/train_step/update_CONV_1/W/ApplyAdam"
input: "^LossPredict/train_step/update_CONV_1/b/ApplyAdam"
input: "^LossPredict/train_step/update_COV_2/W/ApplyAdam"
input: "^LossPredict/train_step/update_COV_2/b/ApplyAdam"
input: "^LossPredict/train_step/update_MLP_1/W_fc/ApplyAdam"
input: "^LossPredict/train_step/update_MLP_1/bias_fc/ApplyAdam"
input: "^LossPredict/train_step/update_MLP_2/W_fc/ApplyAdam"
input: "^LossPredict/train_step/update_MLP_2/bias_fc/ApplyAdam"

name: "LossPredict/ArgMax/dimension"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "LossPredict/ArgMax"
op: "ArgMax"
input: "MLP_2/outputs"
input: "LossPredict/ArgMax/dimension"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "output_type"
  value {
    type: DT_INT64
  }
}

name: "LossPredict/ArgMax_1/dimension"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "LossPredict/ArgMax_1"
op: "ArgMax"
input: "Placeholder_1"
input: "LossPredict/ArgMax_1/dimension"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "output_type"
  value {
    type: DT_INT64
  }
}

name: "LossPredict/Equal"
op: "Equal"
input: "LossPredict/ArgMax"
input: "LossPredict/ArgMax_1"
attr {
  key: "T"
  value {
    type: DT_INT64
  }
}

name: "LossPredict/Cast"
op: "Cast"
input: "LossPredict/Equal"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "LossPredict/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}

name: "LossPredict/accuracy"
op: "Mean"
input: "LossPredict/Cast"
input: "LossPredict/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "init"
op: "NoOp"
input: "^CONV_1/W/Assign"
input: "^CONV_1/b/Assign"
input: "^COV_2/W/Assign"
input: "^COV_2/b/Assign"
input: "^LossPredict/CONV_1/W/Adam/Assign"
input: "^LossPredict/CONV_1/W/Adam_1/Assign"
input: "^LossPredict/CONV_1/b/Adam/Assign"
input: "^LossPredict/CONV_1/b/Adam_1/Assign"
input: "^LossPredict/COV_2/W/Adam/Assign"
input: "^LossPredict/COV_2/W/Adam_1/Assign"
input: "^LossPredict/COV_2/b/Adam/Assign"
input: "^LossPredict/COV_2/b/Adam_1/Assign"
input: "^LossPredict/MLP_1/W_fc/Adam/Assign"
input: "^LossPredict/MLP_1/W_fc/Adam_1/Assign"
input: "^LossPredict/MLP_1/bias_fc/Adam/Assign"
input: "^LossPredict/MLP_1/bias_fc/Adam_1/Assign"
input: "^LossPredict/MLP_2/W_fc/Adam/Assign"
input: "^LossPredict/MLP_2/W_fc/Adam_1/Assign"
input: "^LossPredict/MLP_2/bias_fc/Adam/Assign"
input: "^LossPredict/MLP_2/bias_fc/Adam_1/Assign"
input: "^LossPredict/beta1_power/Assign"
input: "^LossPredict/beta2_power/Assign"
input: "^MLP_1/W_fc/Assign"
input: "^MLP_1/bias_fc/Assign"
input: "^MLP_2/W_fc/Assign"
input: "^MLP_2/bias_fc/Assign"

name: "save/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
      }
      string_val: "model"
    }
  }
}

name: "save/SaveV2/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 26
        }
      }
      string_val: "CONV_1/W"
      string_val: "CONV_1/b"
      string_val: "COV_2/W"
      string_val: "COV_2/b"
      string_val: "LossPredict/CONV_1/W/Adam"
      string_val: "LossPredict/CONV_1/W/Adam_1"
      string_val: "LossPredict/CONV_1/b/Adam"
      string_val: "LossPredict/CONV_1/b/Adam_1"
      string_val: "LossPredict/COV_2/W/Adam"
      string_val: "LossPredict/COV_2/W/Adam_1"
      string_val: "LossPredict/COV_2/b/Adam"
      string_val: "LossPredict/COV_2/b/Adam_1"
      string_val: "LossPredict/MLP_1/W_fc/Adam"
      string_val: "LossPredict/MLP_1/W_fc/Adam_1"
      string_val: "LossPredict/MLP_1/bias_fc/Adam"
      string_val: "LossPredict/MLP_1/bias_fc/Adam_1"
      string_val: "LossPredict/MLP_2/W_fc/Adam"
      string_val: "LossPredict/MLP_2/W_fc/Adam_1"
      string_val: "LossPredict/MLP_2/bias_fc/Adam"
      string_val: "LossPredict/MLP_2/bias_fc/Adam_1"
      string_val: "LossPredict/beta1_power"
      string_val: "LossPredict/beta2_power"
      string_val: "MLP_1/W_fc"
      string_val: "MLP_1/bias_fc"
      string_val: "MLP_2/W_fc"
      string_val: "MLP_2/bias_fc"
    }
  }
}

name: "save/SaveV2/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 26
        }
      }
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
    }
  }
}

name: "save/SaveV2"
op: "SaveV2"
input: "save/Const"
input: "save/SaveV2/tensor_names"
input: "save/SaveV2/shape_and_slices"
input: "CONV_1/W"
input: "CONV_1/b"
input: "COV_2/W"
input: "COV_2/b"
input: "LossPredict/CONV_1/W/Adam"
input: "LossPredict/CONV_1/W/Adam_1"
input: "LossPredict/CONV_1/b/Adam"
input: "LossPredict/CONV_1/b/Adam_1"
input: "LossPredict/COV_2/W/Adam"
input: "LossPredict/COV_2/W/Adam_1"
input: "LossPredict/COV_2/b/Adam"
input: "LossPredict/COV_2/b/Adam_1"
input: "LossPredict/MLP_1/W_fc/Adam"
input: "LossPredict/MLP_1/W_fc/Adam_1"
input: "LossPredict/MLP_1/bias_fc/Adam"
input: "LossPredict/MLP_1/bias_fc/Adam_1"
input: "LossPredict/MLP_2/W_fc/Adam"
input: "LossPredict/MLP_2/W_fc/Adam_1"
input: "LossPredict/MLP_2/bias_fc/Adam"
input: "LossPredict/MLP_2/bias_fc/Adam_1"
input: "LossPredict/beta1_power"
input: "LossPredict/beta2_power"
input: "MLP_1/W_fc"
input: "MLP_1/bias_fc"
input: "MLP_2/W_fc"
input: "MLP_2/bias_fc"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
    }
  }
}

name: "save/control_dependency"
op: "Identity"
input: "save/Const"
input: "^save/SaveV2"
attr {
  key: "T"
  value {
    type: DT_STRING
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@save/Const"
    }
  }
}

name: "save/RestoreV2/tensor_names"
op: "Const"
device: "/device:CPU:0"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 26
        }
      }
      string_val: "CONV_1/W"
      string_val: "CONV_1/b"
      string_val: "COV_2/W"
      string_val: "COV_2/b"
      string_val: "LossPredict/CONV_1/W/Adam"
      string_val: "LossPredict/CONV_1/W/Adam_1"
      string_val: "LossPredict/CONV_1/b/Adam"
      string_val: "LossPredict/CONV_1/b/Adam_1"
      string_val: "LossPredict/COV_2/W/Adam"
      string_val: "LossPredict/COV_2/W/Adam_1"
      string_val: "LossPredict/COV_2/b/Adam"
      string_val: "LossPredict/COV_2/b/Adam_1"
      string_val: "LossPredict/MLP_1/W_fc/Adam"
      string_val: "LossPredict/MLP_1/W_fc/Adam_1"
      string_val: "LossPredict/MLP_1/bias_fc/Adam"
      string_val: "LossPredict/MLP_1/bias_fc/Adam_1"
      string_val: "LossPredict/MLP_2/W_fc/Adam"
      string_val: "LossPredict/MLP_2/W_fc/Adam_1"
      string_val: "LossPredict/MLP_2/bias_fc/Adam"
      string_val: "LossPredict/MLP_2/bias_fc/Adam_1"
      string_val: "LossPredict/beta1_power"
      string_val: "LossPredict/beta2_power"
      string_val: "MLP_1/W_fc"
      string_val: "MLP_1/bias_fc"
      string_val: "MLP_2/W_fc"
      string_val: "MLP_2/bias_fc"
    }
  }
}

name: "save/RestoreV2/shape_and_slices"
op: "Const"
device: "/device:CPU:0"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 26
        }
      }
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
    }
  }
}

name: "save/RestoreV2"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2/tensor_names"
input: "save/RestoreV2/shape_and_slices"
device: "/device:CPU:0"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
    }
  }
}

name: "save/Assign"
op: "Assign"
input: "CONV_1/W"
input: "save/RestoreV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@CONV_1/W"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_1"
op: "Assign"
input: "CONV_1/b"
input: "save/RestoreV2:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@CONV_1/b"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_2"
op: "Assign"
input: "COV_2/W"
input: "save/RestoreV2:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@COV_2/W"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_3"
op: "Assign"
input: "COV_2/b"
input: "save/RestoreV2:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@COV_2/b"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_4"
op: "Assign"
input: "LossPredict/CONV_1/W/Adam"
input: "save/RestoreV2:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@CONV_1/W"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_5"
op: "Assign"
input: "LossPredict/CONV_1/W/Adam_1"
input: "save/RestoreV2:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@CONV_1/W"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_6"
op: "Assign"
input: "LossPredict/CONV_1/b/Adam"
input: "save/RestoreV2:6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@CONV_1/b"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_7"
op: "Assign"
input: "LossPredict/CONV_1/b/Adam_1"
input: "save/RestoreV2:7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@CONV_1/b"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_8"
op: "Assign"
input: "LossPredict/COV_2/W/Adam"
input: "save/RestoreV2:8"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@COV_2/W"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_9"
op: "Assign"
input: "LossPredict/COV_2/W/Adam_1"
input: "save/RestoreV2:9"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@COV_2/W"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_10"
op: "Assign"
input: "LossPredict/COV_2/b/Adam"
input: "save/RestoreV2:10"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@COV_2/b"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_11"
op: "Assign"
input: "LossPredict/COV_2/b/Adam_1"
input: "save/RestoreV2:11"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@COV_2/b"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_12"
op: "Assign"
input: "LossPredict/MLP_1/W_fc/Adam"
input: "save/RestoreV2:12"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_1/W_fc"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_13"
op: "Assign"
input: "LossPredict/MLP_1/W_fc/Adam_1"
input: "save/RestoreV2:13"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_1/W_fc"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_14"
op: "Assign"
input: "LossPredict/MLP_1/bias_fc/Adam"
input: "save/RestoreV2:14"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_1/bias_fc"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_15"
op: "Assign"
input: "LossPredict/MLP_1/bias_fc/Adam_1"
input: "save/RestoreV2:15"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_1/bias_fc"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_16"
op: "Assign"
input: "LossPredict/MLP_2/W_fc/Adam"
input: "save/RestoreV2:16"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_2/W_fc"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_17"
op: "Assign"
input: "LossPredict/MLP_2/W_fc/Adam_1"
input: "save/RestoreV2:17"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_2/W_fc"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_18"
op: "Assign"
input: "LossPredict/MLP_2/bias_fc/Adam"
input: "save/RestoreV2:18"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_2/bias_fc"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_19"
op: "Assign"
input: "LossPredict/MLP_2/bias_fc/Adam_1"
input: "save/RestoreV2:19"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_2/bias_fc"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_20"
op: "Assign"
input: "LossPredict/beta1_power"
input: "save/RestoreV2:20"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@CONV_1/W"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_21"
op: "Assign"
input: "LossPredict/beta2_power"
input: "save/RestoreV2:21"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@CONV_1/W"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_22"
op: "Assign"
input: "MLP_1/W_fc"
input: "save/RestoreV2:22"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_1/W_fc"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_23"
op: "Assign"
input: "MLP_1/bias_fc"
input: "save/RestoreV2:23"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_1/bias_fc"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_24"
op: "Assign"
input: "MLP_2/W_fc"
input: "save/RestoreV2:24"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_2/W_fc"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_25"
op: "Assign"
input: "MLP_2/bias_fc"
input: "save/RestoreV2:25"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MLP_2/bias_fc"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/restore_all"
op: "NoOp"
input: "^save/Assign"
input: "^save/Assign_1"
input: "^save/Assign_10"
input: "^save/Assign_11"
input: "^save/Assign_12"
input: "^save/Assign_13"
input: "^save/Assign_14"
input: "^save/Assign_15"
input: "^save/Assign_16"
input: "^save/Assign_17"
input: "^save/Assign_18"
input: "^save/Assign_19"
input: "^save/Assign_2"
input: "^save/Assign_20"
input: "^save/Assign_21"
input: "^save/Assign_22"
input: "^save/Assign_23"
input: "^save/Assign_24"
input: "^save/Assign_25"
input: "^save/Assign_3"
input: "^save/Assign_4"
input: "^save/Assign_5"
input: "^save/Assign_6"
input: "^save/Assign_7"
input: "^save/Assign_8"
input: "^save/Assign_9"

